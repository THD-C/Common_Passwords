name: Create Release

on:
  push:
    branches: main
  
  workflow_dispatch:

permissions:
  contents: write

jobs:
  Release:
    uses: THD-C/GH_Actions/.github/workflows/release.yml@main
    secrets: inherit

  Get_Passwords:
    needs: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Release id for ${{ needs.Release.outputs.version_tag }}
        shell: pwsh
        id: get-release
        env:
          VERSION: ${{ needs.Release.outputs.version_tag }}
        run: |
          $r = Invoke-RestMethod -ContentType "application/json" -Headers @{
            "Accept"               = "application/vnd.github+json"
            "Authorization"        = "Bearer ${{ secrets.GITHUB_TOKEN }}"
            "X-GitHub-Api-Version" = "2022-11-28"
          } -Body $(
              @{
                  "tag_name"               = "$($env:VERSION)"
                  "name"                   = "$($env:VERSION) Release"
                  "draft"                  = $false
                  "prerelease"             = $false
                  "generate_release_notes" = $false
              } | ConvertTo-Json
          ) -Uri "https://api.github.com/repos/${{ github.repository }}/releases/tags/$($env:VERSION)"

          Add-Content -Path $env:GITHUB_OUTPUT -Value "release_id=$($r.id)"

      - name: Generate JSON file
        shell: pwsh
        run: |
          ./Get-CommonPasswords.ps1

      - name: Create archive
        id: create-archive
        run: |
          tar -czf "${{vars.ARTIFACT_NAME_COMMON_PASSWORDS}}" ./passwords
          rm -rf ./passwords

      - name: Upload archive
        run: |
          curl -L -s --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            --url "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get-release.outputs.release_id }}/assets?name=${{ steps.create-archive.outputs.archive_name }}" \
            --data-binary "@${{ steps.create-archive.outputs.archive_name }}"
    
      - name: Remove archive from disk
        run: |
          rm "${{vars.ARTIFACT_NAME_COMMON_PASSWORDS}}"

